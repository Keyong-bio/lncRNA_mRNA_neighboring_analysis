# Title: 7_Transcriptional_Orientation_Repeat
# Purpose: To assign the type of transcriptional orientation between the mRNA-lncRNA/ mRNA-mRNA pairs
# This time around, the list of neighboring pairs will not have any that have same coordinates
# Packages: "GenomicRanges"

require(GenomicRanges)

# Input files: "mRNAde_lncRNAde_[distance]", "all_mRNA_lncRNA_[50/150/300kbp]", mRNAde_mRNAde_[distance], all_mRNA_mRNA_[50/150/300kbp],
# "lncRNA_IL1B_differentiallyexpressed", "mRNA_IL1B_differentiallyexpressed"
# Output files: "all_mRNA_lncRNA_transcriptional_classification_[50/150/300kbp]", "mRNAde_lncRNAde_transcriptional_classification_[distance]",
# "all_mRNA_mRNA_transcriptional_classification_[50/150/300kbp]", "mRNAde_mRNAde_transcriptional_classification_[distance]",
# "mRNAde_lncRNAde_classification_tabulation", and "mRNAde_mRNAde_classification_tabulation"
# Output graphs: "mRNA_lncRNA_classification_tabulation.pdf" and "mRNA_mRNA_classification_tabulation.pdf"

# -----------------------------------------------------------------------------------------------------------------------
# Loading the mRNA-lncRNA neighboring pair csv files 
# Start by setting up a list of genomic distances for which to open up the files
distance<-as.integer(c(seq(5000, 100000, 5000),125000,150000,175000,200000,
                       225000, 250000,275000, 300000, 400000, 500000))

# Opening up the mRNA-lncRNA neighboring pairs for the selected genomic distances and combining all these dataframes in one list
mRNAde_lncRNAde_list<-lapply(seq_along(distance), function(i)   assign(paste("mRNAde_lncRNAde_",distance[i], sep=""), read.csv(paste("Path/mRNAde_lncRNAde/mRNAde_lncRNAde_",distance[i],".csv", sep=""), stringsAsFactors=FALSE)[,c(2:3)]))

# For genomic background control open up the list of all mRNA-lncRNA pairs regardless of whether they're IL1B regulated
# Do so for 50kb/150kb/300kb
all_mRNA_lncRNA_50kb<-read.csv("Path/all_mRNA_lncRNA/all_mRNA_lncRNA_50000.csv", stringsAsFactors=FALSE)
all_mRNA_lncRNA_150kb<-read.csv("Path/all_mRNA_lncRNA/all_mRNA_lncRNA_150000.csv", stringsAsFactors=FALSE)
all_mRNA_lncRNA_300kb<-read.csv("Path/all_mRNA_lncRNA/all_mRNA_lncRNA_300000.csv", stringsAsFactors=FALSE)

# -----------------------------------------------------------------------------------------------------------------------------------------------
# Now opening up the files with the coordinates of lncRNAs and mRNAs

lncRNA_coordinates <- read.csv("Path/Table_S1_lncRNA_microarray_results.csv")
lncRNA_coordinates<-lncRNA_coordinates[complete.cases(lncRNA_coordinates),]
lncRNA_coordinates<-lncRNA_coordinates[!duplicated(lncRNA_coordinates$lncRNA),]

mRNA_coordinates <- read.csv("Path/Table_S2_mRNA_microarray_results.csv")
mRNA_coordinates<-mRNA_coordinates[complete.cases(mRNA_coordinates),]
mRNA_coordinates<-mRNA_coordinates[!duplicated(mRNA_coordinates$mRNA),]

#-----------------------------------------------------------------------------------------------------------
# Here use the names of mRNA/lncRNA of interest to retrieve its coordinates from the
# lncRNA_coordinates/ mRNA_coordinates dataframe.
# The coordinates data is than combined

# First perform for lncRNAs from mRNAde_lncRNAde pairs
lncRNA_chr<-sapply(seq_along(distance), function(i) sapply(1:nrow(mRNAde_lncRNAde_list[[i]]), function(j) as.character(lncRNA_coordinates[as.character(mRNAde_lncRNAde_list[[i]]$lncRNA_Symbol[j])==as.character(lncRNA_coordinates$lncRNA),2])))
lncRNA_start<-sapply(seq_along(distance), function(i) sapply(1:nrow(mRNAde_lncRNAde_list[[i]]), function(j) as.character(lncRNA_coordinates[as.character(mRNAde_lncRNAde_list[[i]]$lncRNA_Symbol[j])==as.character(lncRNA_coordinates$lncRNA),3])))
lncRNA_end<-sapply(seq_along(distance), function(i) sapply(1:nrow(mRNAde_lncRNAde_list[[i]]), function(j) as.character(lncRNA_coordinates[as.character(mRNAde_lncRNAde_list[[i]]$lncRNA_Symbol[j])==as.character(lncRNA_coordinates$lncRNA),4])))
lncRNA_strand<-sapply(seq_along(distance), function(i) sapply(1:nrow(mRNAde_lncRNAde_list[[i]]), function(j) as.character(lncRNA_coordinates[as.character(mRNAde_lncRNAde_list[[i]]$lncRNA_Symbol[j])==as.character(lncRNA_coordinates$lncRNA),5])))

lncRNA_frommRNAdelncRNAde_list<-lapply(seq_along(distance), function(i) as.data.frame(cbind(mRNAde_lncRNAde_list[[i]]$lncRNA_Symbol, lncRNA_chr[[i]], lncRNA_start[[i]], lncRNA_end[[i]], lncRNA_strand[[i]]), stringsAsFactors=FALSE))

# Next perform for mRNAs from mRNAde_lncRNAde pairs
mRNA_chr<-sapply(seq_along(distance), function(i) sapply(1:nrow(mRNAde_lncRNAde_list[[i]]), function(j) as.character(mRNA_coordinates[as.character(mRNAde_lncRNAde_list[[i]]$mRNA_Symbol[j])==as.character(mRNA_coordinates$mRNA),3])))
mRNA_start<-sapply(seq_along(distance), function(i) sapply(1:nrow(mRNAde_lncRNAde_list[[i]]), function(j) as.numeric(mRNA_coordinates[as.character(mRNAde_lncRNAde_list[[i]]$mRNA_Symbol[j])==as.character(mRNA_coordinates$mRNA),4])))
mRNA_end<-sapply(seq_along(distance), function(i) sapply(1:nrow(mRNAde_lncRNAde_list[[i]]), function(j) as.numeric(mRNA_coordinates[as.character(mRNAde_lncRNAde_list[[i]]$mRNA_Symbol[j])==as.character(mRNA_coordinates$mRNA),5])))
mRNA_strand<-sapply(seq_along(distance), function(i) sapply(1:nrow(mRNAde_lncRNAde_list[[i]]), function(j) as.character(mRNA_coordinates[as.character(mRNAde_lncRNAde_list[[i]]$mRNA_Symbol[j])==as.character(mRNA_coordinates$mRNA),6])))

mRNA_frommRNAdelncRNAde_list<-lapply(seq_along(distance), function(i) as.data.frame(cbind(mRNAde_lncRNAde_list[[i]]$mRNA_Symbol, mRNA_chr[[i]], mRNA_start[[i]], mRNA_end[[i]], mRNA_strand[[i]]), stringsAsFactors=FALSE))


# Next perform for lncRNAs and mRNAs from all_mRNA_lncRNA pairs
# Start with 50kb
lncRNA_chr<-sapply(1:nrow(all_mRNA_lncRNA_50kb), function(i) as.character(lncRNA_coordinates[as.character(all_mRNA_lncRNA_50kb$lncRNA_Symbol[i])==as.character(lncRNA_coordinates$lncRNA),2]))
lncRNA_start<-sapply(1:nrow(all_mRNA_lncRNA_50kb), function(i) as.character(lncRNA_coordinates[as.character(all_mRNA_lncRNA_50kb$lncRNA_Symbol[i])==as.character(lncRNA_coordinates$lncRNA),3]))
lncRNA_end<-sapply(1:nrow(all_mRNA_lncRNA_50kb), function(i) as.character(lncRNA_coordinates[as.character(all_mRNA_lncRNA_50kb$lncRNA_Symbol[i])==as.character(lncRNA_coordinates$lncRNA),4]))
lncRNA_strand<-sapply(1:nrow(all_mRNA_lncRNA_50kb), function(i) as.character(lncRNA_coordinates[as.character(all_mRNA_lncRNA_50kb$lncRNA_Symbol[i])==as.character(lncRNA_coordinates$lncRNA),5]))

lncRNA_fromallmRNAlncRNA_50kb<-as.data.frame(cbind(all_mRNA_lncRNA_50kb$lncRNA_Symbol, lncRNA_chr, lncRNA_start, lncRNA_end, lncRNA_strand), stringsAsFactors=FALSE)

mRNA_chr<-sapply(1:nrow(all_mRNA_lncRNA_50kb), function(i) as.character(mRNA_coordinates[as.character(all_mRNA_lncRNA_50kb$mRNA_Symbol[i])==as.character(mRNA_coordinates$mRNA),3]))
mRNA_start<-sapply(1:nrow(all_mRNA_lncRNA_50kb), function(i) as.character(mRNA_coordinates[as.character(all_mRNA_lncRNA_50kb$mRNA_Symbol[i])==as.character(mRNA_coordinates$mRNA),4]))
mRNA_end<-sapply(1:nrow(all_mRNA_lncRNA_50kb), function(i) as.character(mRNA_coordinates[as.character(all_mRNA_lncRNA_50kb$mRNA_Symbol[i])==as.character(mRNA_coordinates$mRNA),5]))
mRNA_strand<-sapply(1:nrow(all_mRNA_lncRNA_50kb), function(i) as.character(mRNA_coordinates[as.character(all_mRNA_lncRNA_50kb$mRNA_Symbol[i])==as.character(mRNA_coordinates$mRNA),6]))

mRNA_fromallmRNAlncRNA_50kb<-as.data.frame(cbind(all_mRNA_lncRNA_50kb$mRNA_Symbol, mRNA_chr, mRNA_start, mRNA_end, mRNA_strand), stringsAsFactors=FALSE)


# Next with 150kb
lncRNA_chr<-sapply(1:nrow(all_mRNA_lncRNA_150kb), function(i) as.character(lncRNA_coordinates[as.character(all_mRNA_lncRNA_150kb$lncRNA_Symbol[i])==as.character(lncRNA_coordinates$lncRNA),2]))
lncRNA_start<-sapply(1:nrow(all_mRNA_lncRNA_150kb), function(i) as.character(lncRNA_coordinates[as.character(all_mRNA_lncRNA_150kb$lncRNA_Symbol[i])==as.character(lncRNA_coordinates$lncRNA),3]))
lncRNA_end<-sapply(1:nrow(all_mRNA_lncRNA_150kb), function(i) as.character(lncRNA_coordinates[as.character(all_mRNA_lncRNA_150kb$lncRNA_Symbol[i])==as.character(lncRNA_coordinates$lncRNA),4]))
lncRNA_strand<-sapply(1:nrow(all_mRNA_lncRNA_150kb), function(i) as.character(lncRNA_coordinates[as.character(all_mRNA_lncRNA_150kb$lncRNA_Symbol[i])==as.character(lncRNA_coordinates$lncRNA),5]))

lncRNA_fromallmRNAlncRNA_150kb<-as.data.frame(cbind(all_mRNA_lncRNA_150kb$lncRNA_Symbol, lncRNA_chr, lncRNA_start, lncRNA_end, lncRNA_strand), stringsAsFactors=FALSE)

mRNA_chr<-sapply(1:nrow(all_mRNA_lncRNA_150kb), function(i) as.character(mRNA_coordinates[as.character(all_mRNA_lncRNA_150kb$mRNA_Symbol[i])==as.character(mRNA_coordinates$mRNA),3]))
mRNA_start<-sapply(1:nrow(all_mRNA_lncRNA_150kb), function(i) as.character(mRNA_coordinates[as.character(all_mRNA_lncRNA_150kb$mRNA_Symbol[i])==as.character(mRNA_coordinates$mRNA),4]))
mRNA_end<-sapply(1:nrow(all_mRNA_lncRNA_150kb), function(i) as.character(mRNA_coordinates[as.character(all_mRNA_lncRNA_150kb$mRNA_Symbol[i])==as.character(mRNA_coordinates$mRNA),5]))
mRNA_strand<-sapply(1:nrow(all_mRNA_lncRNA_150kb), function(i) as.character(mRNA_coordinates[as.character(all_mRNA_lncRNA_150kb$mRNA_Symbol[i])==as.character(mRNA_coordinates$mRNA),6]))

mRNA_fromallmRNAlncRNA_150kb<-as.data.frame(cbind(all_mRNA_lncRNA_150kb$mRNA_Symbol, mRNA_chr, mRNA_start, mRNA_end, mRNA_strand), stringsAsFactors=FALSE)


# Next with 300kb
lncRNA_chr<-sapply(1:nrow(all_mRNA_lncRNA_300kb), function(i) as.character(lncRNA_coordinates[as.character(all_mRNA_lncRNA_300kb$lncRNA_Symbol[i])==as.character(lncRNA_coordinates$lncRNA),2]))
lncRNA_start<-sapply(1:nrow(all_mRNA_lncRNA_300kb), function(i) as.character(lncRNA_coordinates[as.character(all_mRNA_lncRNA_300kb$lncRNA_Symbol[i])==as.character(lncRNA_coordinates$lncRNA),3]))
lncRNA_end<-sapply(1:nrow(all_mRNA_lncRNA_300kb), function(i) as.character(lncRNA_coordinates[as.character(all_mRNA_lncRNA_300kb$lncRNA_Symbol[i])==as.character(lncRNA_coordinates$lncRNA),4]))
lncRNA_strand<-sapply(1:nrow(all_mRNA_lncRNA_300kb), function(i) as.character(lncRNA_coordinates[as.character(all_mRNA_lncRNA_300kb$lncRNA_Symbol[i])==as.character(lncRNA_coordinates$lncRNA),5]))

lncRNA_fromallmRNAlncRNA_300kb<-as.data.frame(cbind(all_mRNA_lncRNA_300kb$lncRNA_Symbol, lncRNA_chr, lncRNA_start, lncRNA_end, lncRNA_strand), stringsAsFactors=FALSE)

mRNA_chr<-sapply(1:nrow(all_mRNA_lncRNA_300kb), function(i) as.character(mRNA_coordinates[as.character(all_mRNA_lncRNA_300kb$mRNA_Symbol[i])==as.character(mRNA_coordinates$mRNA),3]))
mRNA_start<-sapply(1:nrow(all_mRNA_lncRNA_300kb), function(i) as.character(mRNA_coordinates[as.character(all_mRNA_lncRNA_300kb$mRNA_Symbol[i])==as.character(mRNA_coordinates$mRNA),4]))
mRNA_end<-sapply(1:nrow(all_mRNA_lncRNA_300kb), function(i) as.character(mRNA_coordinates[as.character(all_mRNA_lncRNA_300kb$mRNA_Symbol[i])==as.character(mRNA_coordinates$mRNA),5]))
mRNA_strand<-sapply(1:nrow(all_mRNA_lncRNA_300kb), function(i) as.character(mRNA_coordinates[as.character(all_mRNA_lncRNA_300kb$mRNA_Symbol[i])==as.character(mRNA_coordinates$mRNA),6]))

mRNA_fromallmRNAlncRNA_300kb<-as.data.frame(cbind(all_mRNA_lncRNA_300kb$mRNA_Symbol, mRNA_chr, mRNA_start, mRNA_end, mRNA_strand), stringsAsFactors=FALSE)


# -----------------------------------------------------------------------------------------------------------------------------------------------
# Afterwards the function "transcriptional classifier" is used on the mRNA/lncRNA coordinates
# to define them as either being forward codirectional, reverse codirectional, convergent, divergent,
# antisense or intersecting

transcriptional_classifier_lncRNA<-function(lncRNA, mRNA){
 
  # The inputs for the function is a list of lncRNAs with their coordinates and a list of
  # mRNAs with their coordinates
  
  # Start with first making sure that all of the column labels are appropriate and that
  # the correct classes of data are used 
  
  lncRNA<-lncRNA
  colnames(lncRNA)<-c("lncRNA", "lncRNA_chr", "lncRNA_start", "lncRNA_end", "lncRNA_strand")
  lncRNA$lncRNA_start<-as.numeric(lncRNA$lncRNA_start)
  lncRNA$lncRNA_end<-as.numeric(lncRNA$lncRNA_end)
  lncRNA$lncRNA_strand<-as.character(lncRNA$lncRNA_strand)
  
  mRNA<-mRNA
  colnames(mRNA)<-c("mRNA", "mRNA_chr", "mRNA_start", "mRNA_end", "mRNA_strand")
  mRNA$mRNA_start<-as.numeric(mRNA$mRNA_start)
  mRNA$mRNA_end<-as.numeric(mRNA$mRNA_end)
  mRNA$mRNA_strand<-as.character(mRNA$mRNA_strand)

  lncRNA[((lncRNA$lncRNA_start>mRNA$mRNA_start)&(lncRNA$lncRNA_end>mRNA$mRNA_end)&(lncRNA$lncRNA_start<=mRNA$mRNA_end)),6]<-as.character("antisense")
  lncRNA[((lncRNA$lncRNA_start<mRNA$mRNA_start)&(lncRNA$lncRNA_end<mRNA$mRNA_end)&(lncRNA$lncRNA_end>=mRNA$mRNA_start)),6]<-as.character("antisense")
  
  lncRNA[((lncRNA$lncRNA_start>mRNA$mRNA_start)&(lncRNA$lncRNA_end>mRNA$mRNA_end)&(lncRNA$lncRNA_start>mRNA$mRNA_end)),6]<-as.character("downstream")
  lncRNA[((lncRNA$lncRNA_start<mRNA$mRNA_start)&(lncRNA$lncRNA_end<mRNA$mRNA_end)&(lncRNA$lncRNA_end<mRNA$mRNA_start)),6]<-as.character("upstream")
  
  lncRNA[((lncRNA$lncRNA_start<=mRNA$mRNA_start)&(lncRNA$lncRNA_end>=mRNA$mRNA_end))|((lncRNA$lncRNA_start>=mRNA$mRNA_start)&(lncRNA$lncRNA_end<=mRNA$mRNA_end)),6]<-as.character("intersecting")
   
  lncRNA[((lncRNA$lncRNA_start==mRNA$mRNA_start)&(lncRNA$lncRNA_end==mRNA$mRNA_end)),6]<-as.character("same coordinates")
  
  
  lncRNA[(lncRNA$lncRNA_strand=="+")&(mRNA$mRNA_strand=="+")&(lncRNA$V6=="upstream"),7]<-as.character("forward codirectional")
  lncRNA[(lncRNA$lncRNA_strand=="-")&(mRNA$mRNA_strand=="-")&(lncRNA$V6=="upstream"),7]<-as.character("reverse codirectional")
  lncRNA[(lncRNA$lncRNA_strand=="+")&(mRNA$mRNA_strand=="-")&(lncRNA$V6=="upstream"),7]<-as.character("convergent")
  lncRNA[(lncRNA$lncRNA_strand=="-")&(mRNA$mRNA_strand=="+")&(lncRNA$V6=="upstream"),7]<-as.character("divergent")
  
  lncRNA[(lncRNA$lncRNA_strand=="+")&(mRNA$mRNA_strand=="+")&(lncRNA$V6=="downstream"),7]<-as.character("forward codirectional")
  lncRNA[(lncRNA$lncRNA_strand=="-")&(mRNA$mRNA_strand=="-")&(lncRNA$V6=="downstream"),7]<-as.character("reverse codirectional")
  lncRNA[(lncRNA$lncRNA_strand=="+")&(mRNA$mRNA_strand=="-")&(lncRNA$V6=="downstream"),7]<-as.character("divergent")
  lncRNA[(lncRNA$lncRNA_strand=="-")&(mRNA$mRNA_strand=="+")&(lncRNA$V6=="downstream"),7]<-as.character("convergent")

  lncRNA[(lncRNA$V6=="same coordinates"),7]<-as.character("same coordinates")
  lncRNA[(lncRNA$V6=="antisense"),7]<-as.character("antisense")
  lncRNA[(lncRNA$V6=="intersecting"),7]<-as.character("intersecting")
  
    return(lncRNA)
}

# -----------------------------------------------------------------------------------------------------------------------------------------------
# Running the transcription_classifier function for the mRNAde_lncRNA list,
# the mRNAde_lncRNAde list and all_mRNA_lncRNA_list
mRNAde_lncRNAde_list<-lapply(seq_along(distance), function(i) transcriptional_classifier_lncRNA(lncRNA_frommRNAdelncRNAde_list[[i]], mRNA_frommRNAdelncRNAde_list[[i]]))

all_mRNA_lncRNA_50kb<-transcriptional_classifier_lncRNA(lncRNA_fromallmRNAlncRNA_50kb, mRNA_fromallmRNAlncRNA_50kb)
all_mRNA_lncRNA_150kb<-transcriptional_classifier_lncRNA(lncRNA_fromallmRNAlncRNA_150kb, mRNA_fromallmRNAlncRNA_150kb)
all_mRNA_lncRNA_300kb<-transcriptional_classifier_lncRNA(lncRNA_fromallmRNAlncRNA_300kb, mRNA_fromallmRNAlncRNA_300kb)

# -----------------------------------------------------------------------------------------------------------------------------------------------
# Saving the transcriptional orientation of mRNA-lncRNA pairs

lapply(seq_along(mRNAde_lncRNAde_list),
       function(i)(write.csv(as.data.frame(mRNAde_lncRNAde_list[[i]]),
                             file =paste0("mRNAde_lncRNAde_transcriptional_classification_",distance[i],'.csv'))))

# Also saving the transcriptional orientation of all mRNA-lncRNA pairs

write.csv(all_mRNA_lncRNA_50kb, "all_mRNA_lncRNA_transcriptional_classification_50kb.csv")
write.csv(all_mRNA_lncRNA_150kb, "all_mRNA_lncRNA_transcriptional_classification_150kb.csv")
write.csv(all_mRNA_lncRNA_300kb, "all_mRNA_lncRNA_transcriptional_classification_300kb.csv")


# -----------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------
# Repeating for the mRNA_mRNA datasets
# Loading the mRNA-lncRNA neighboring pair csv files 
# Start by setting up a list of genomic distances for which to open up the files
distance<-as.integer(c(seq(5000, 100000, 5000),125000,150000,175000,200000,
                       225000, 250000,275000, 300000, 400000, 500000))

# Opening up the mRNA-mRNA neighboring pairs for the selected genomic distances and combining all these dataframes in one list
mRNAde_mRNAde_list<-lapply(seq_along(distance), function(i)   assign(paste("mRNAde_mRNAde_",distance[i], "_up_downstream", sep=""), read.csv(paste("Path/mRNAde_mRNAde/mRNAde_mRNAde_",distance[i],".csv", sep=""), stringsAsFactors=FALSE)[,c(2:3)]))

# For genomic background control open up the list of all mRNA-mRNA pairs regardless of whether they're IL1B regulated
all_mRNA_mRNA_50kb<-read.csv("Path/all_mRNA_mRNA/all_mRNA_mRNA_50000.csv", stringsAsFactors=FALSE)
all_mRNA_mRNA_150kb<-read.csv("Path/all_mRNA_mRNA/all_mRNA_mRNA_150000.csv", stringsAsFactors=FALSE)
all_mRNA_mRNA_300kb<-read.csv("Path/all_mRNA_mRNA/all_mRNA_mRNA_300000.csv", stringsAsFactors=FALSE)

# -----------------------------------------------------------------------------------------------------------------------------------------------
# Now opening up the file with the coordinates of mRNAs

mRNA_coordinates <- read.csv("Path/Table_S2_mRNA_microarray_results.csv")
mRNA_coordinates<-mRNA_coordinates[complete.cases(mRNA_coordinates),]
mRNA_coordinates<-mRNA_coordinates[!duplicated(mRNA_coordinates$mRNA),]

#-----------------------------------------------------------------------------------------------------------
# Here use the names of mRNAs of interest to retrieve its coordinates from the
# mRNA_coordinates dataframe.
# The coordinates data is than combined

# Perform first for mRNAs from mRNAde_mRNAde pairs
mRNA_chr<-sapply(seq_along(distance), function(i) sapply(1:nrow(mRNAde_mRNAde_list[[i]]), function(j) as.character(mRNA_coordinates[as.character(mRNAde_mRNAde_list[[i]]$mRNA_Symbol[j])==as.character(mRNA_coordinates$mRNA),3])))
mRNA_start<-sapply(seq_along(distance), function(i) sapply(1:nrow(mRNAde_mRNAde_list[[i]]), function(j) as.character(mRNA_coordinates[as.character(mRNAde_mRNAde_list[[i]]$mRNA_Symbol[j])==as.character(mRNA_coordinates$mRNA),4])))
mRNA_end<-sapply(seq_along(distance), function(i) sapply(1:nrow(mRNAde_mRNAde_list[[i]]), function(j) as.character(mRNA_coordinates[as.character(mRNAde_mRNAde_list[[i]]$mRNA_Symbol[j])==as.character(mRNA_coordinates$mRNA),5])))
mRNA_strand<-sapply(seq_along(distance), function(i) sapply(1:nrow(mRNAde_mRNAde_list[[i]]), function(j) as.character(mRNA_coordinates[as.character(mRNAde_mRNAde_list[[i]]$mRNA_Symbol[j])==as.character(mRNA_coordinates$mRNA),6])))

mRNA_frommRNAdemRNAde_list<-lapply(seq_along(distance), function(i) as.data.frame(cbind(mRNAde_mRNAde_list[[i]]$mRNA_Symbol, mRNA_chr[[i]], mRNA_start[[i]], mRNA_end[[i]], mRNA_strand[[i]]), stringsAsFactors=FALSE))

# Next perform for mRNA2s from mRNAde_mRNAde pairs
mRNA2_chr<-sapply(seq_along(distance), function(i) sapply(1:nrow(mRNAde_mRNAde_list[[i]]), function(j) as.character(mRNA_coordinates[as.character(mRNAde_mRNAde_list[[i]]$mRNA2_Symbol[j])==as.character(mRNA_coordinates$mRNA),3])))
mRNA2_start<-sapply(seq_along(distance), function(i) sapply(1:nrow(mRNAde_mRNAde_list[[i]]), function(j) as.numeric(mRNA_coordinates[as.character(mRNAde_mRNAde_list[[i]]$mRNA2_Symbol[j])==as.character(mRNA_coordinates$mRNA),4])))
mRNA2_end<-sapply(seq_along(distance), function(i) sapply(1:nrow(mRNAde_mRNAde_list[[i]]), function(j) as.numeric(mRNA_coordinates[as.character(mRNAde_mRNAde_list[[i]]$mRNA2_Symbol[j])==as.character(mRNA_coordinates$mRNA),5])))
mRNA2_strand<-sapply(seq_along(distance), function(i) sapply(1:nrow(mRNAde_mRNAde_list[[i]]), function(j) as.character(mRNA_coordinates[as.character(mRNAde_mRNAde_list[[i]]$mRNA2_Symbol[j])==as.character(mRNA_coordinates$mRNA),6])))

mRNA2_frommRNAdemRNAde_list<-lapply(seq_along(distance), function(i) as.data.frame(cbind(mRNAde_mRNAde_list[[i]]$mRNA2_Symbol, mRNA2_chr[[i]], mRNA2_start[[i]], mRNA2_end[[i]], mRNA2_strand[[i]]), stringsAsFactors=FALSE))


# Perform for mRNAs and mRNA2s from all_mRNA_mRNA pairs
# Start with 50kb
mRNA_chr<-sapply(1:nrow(all_mRNA_mRNA_50kb), function(i) as.character(mRNA_coordinates[as.character(all_mRNA_mRNA_50kb$mRNA_Symbol[i])==as.character(mRNA_coordinates$mRNA),3]))
mRNA_start<-sapply(1:nrow(all_mRNA_mRNA_50kb), function(i) as.character(mRNA_coordinates[as.character(all_mRNA_mRNA_50kb$mRNA_Symbol[i])==as.character(mRNA_coordinates$mRNA),4]))
mRNA_end<-sapply(1:nrow(all_mRNA_mRNA_50kb), function(i) as.character(mRNA_coordinates[as.character(all_mRNA_mRNA_50kb$mRNA_Symbol[i])==as.character(mRNA_coordinates$mRNA),5]))
mRNA_strand<-sapply(1:nrow(all_mRNA_mRNA_50kb), function(i) as.character(mRNA_coordinates[as.character(all_mRNA_mRNA_50kb$mRNA_Symbol[i])==as.character(mRNA_coordinates$mRNA),6]))

mRNA_fromallmRNAmRNA_50kb<-as.data.frame(cbind(all_mRNA_mRNA_50kb$mRNA_Symbol, mRNA_chr, mRNA_start, mRNA_end, mRNA_strand), stringsAsFactors=FALSE)

mRNA2_chr<-sapply(1:nrow(all_mRNA_mRNA_50kb), function(i) as.character(mRNA_coordinates[as.character(all_mRNA_mRNA_50kb$mRNA2_Symbol[i])==as.character(mRNA_coordinates$mRNA),3]))
mRNA2_start<-sapply(1:nrow(all_mRNA_mRNA_50kb), function(i) as.numeric(mRNA_coordinates[as.character(all_mRNA_mRNA_50kb$mRNA2_Symbol[i])==as.character(mRNA_coordinates$mRNA),4]))
mRNA2_end<-sapply(1:nrow(all_mRNA_mRNA_50kb), function(i) as.numeric(mRNA_coordinates[as.character(all_mRNA_mRNA_50kb$mRNA2_Symbol[i])==as.character(mRNA_coordinates$mRNA),5]))
mRNA2_strand<-sapply(1:nrow(all_mRNA_mRNA_50kb), function(i) as.character(mRNA_coordinates[as.character(all_mRNA_mRNA_50kb$mRNA2_Symbol[i])==as.character(mRNA_coordinates$mRNA),6]))

mRNA2_fromallmRNAmRNA_50kb<-as.data.frame(cbind(all_mRNA_mRNA_50kb$mRNA2_Symbol, mRNA2_chr, mRNA2_start, mRNA2_end, mRNA2_strand), stringsAsFactors=FALSE)

# Next for 150kb
mRNA_chr<-sapply(1:nrow(all_mRNA_mRNA_150kb), function(i) as.character(mRNA_coordinates[as.character(all_mRNA_mRNA_150kb$mRNA_Symbol[i])==as.character(mRNA_coordinates$mRNA),3]))
mRNA_start<-sapply(1:nrow(all_mRNA_mRNA_150kb), function(i) as.character(mRNA_coordinates[as.character(all_mRNA_mRNA_150kb$mRNA_Symbol[i])==as.character(mRNA_coordinates$mRNA),4]))
mRNA_end<-sapply(1:nrow(all_mRNA_mRNA_150kb), function(i) as.character(mRNA_coordinates[as.character(all_mRNA_mRNA_150kb$mRNA_Symbol[i])==as.character(mRNA_coordinates$mRNA),5]))
mRNA_strand<-sapply(1:nrow(all_mRNA_mRNA_150kb), function(i) as.character(mRNA_coordinates[as.character(all_mRNA_mRNA_150kb$mRNA_Symbol[i])==as.character(mRNA_coordinates$mRNA),6]))

mRNA_fromallmRNAmRNA_150kb<-as.data.frame(cbind(all_mRNA_mRNA_150kb$mRNA_Symbol, mRNA_chr, mRNA_start, mRNA_end, mRNA_strand), stringsAsFactors=FALSE)

mRNA2_chr<-sapply(1:nrow(all_mRNA_mRNA_150kb), function(i) as.character(mRNA_coordinates[as.character(all_mRNA_mRNA_150kb$mRNA2_Symbol[i])==as.character(mRNA_coordinates$mRNA),3]))
mRNA2_start<-sapply(1:nrow(all_mRNA_mRNA_150kb), function(i) as.numeric(mRNA_coordinates[as.character(all_mRNA_mRNA_150kb$mRNA2_Symbol[i])==as.character(mRNA_coordinates$mRNA),4]))
mRNA2_end<-sapply(1:nrow(all_mRNA_mRNA_150kb), function(i) as.numeric(mRNA_coordinates[as.character(all_mRNA_mRNA_150kb$mRNA2_Symbol[i])==as.character(mRNA_coordinates$mRNA),5]))
mRNA2_strand<-sapply(1:nrow(all_mRNA_mRNA_150kb), function(i) as.character(mRNA_coordinates[as.character(all_mRNA_mRNA_150kb$mRNA2_Symbol[i])==as.character(mRNA_coordinates$mRNA),6]))

mRNA2_fromallmRNAmRNA_150kb<-as.data.frame(cbind(all_mRNA_mRNA_150kb$mRNA2_Symbol, mRNA2_chr, mRNA2_start, mRNA2_end, mRNA2_strand), stringsAsFactors=FALSE)

# Next for 300kb
mRNA_chr<-sapply(1:nrow(all_mRNA_mRNA_300kb), function(i) as.character(mRNA_coordinates[as.character(all_mRNA_mRNA_300kb$mRNA_Symbol[i])==as.character(mRNA_coordinates$mRNA),3]))
mRNA_start<-sapply(1:nrow(all_mRNA_mRNA_300kb), function(i) as.character(mRNA_coordinates[as.character(all_mRNA_mRNA_300kb$mRNA_Symbol[i])==as.character(mRNA_coordinates$mRNA),4]))
mRNA_end<-sapply(1:nrow(all_mRNA_mRNA_300kb), function(i) as.character(mRNA_coordinates[as.character(all_mRNA_mRNA_300kb$mRNA_Symbol[i])==as.character(mRNA_coordinates$mRNA),5]))
mRNA_strand<-sapply(1:nrow(all_mRNA_mRNA_300kb), function(i) as.character(mRNA_coordinates[as.character(all_mRNA_mRNA_300kb$mRNA_Symbol[i])==as.character(mRNA_coordinates$mRNA),6]))

mRNA_fromallmRNAmRNA_300kb<-as.data.frame(cbind(all_mRNA_mRNA_300kb$mRNA_Symbol, mRNA_chr, mRNA_start, mRNA_end, mRNA_strand), stringsAsFactors=FALSE)

mRNA2_chr<-sapply(1:nrow(all_mRNA_mRNA_300kb), function(i) as.character(mRNA_coordinates[as.character(all_mRNA_mRNA_300kb$mRNA2_Symbol[i])==as.character(mRNA_coordinates$mRNA),3]))
mRNA2_start<-sapply(1:nrow(all_mRNA_mRNA_300kb), function(i) as.numeric(mRNA_coordinates[as.character(all_mRNA_mRNA_300kb$mRNA2_Symbol[i])==as.character(mRNA_coordinates$mRNA),4]))
mRNA2_end<-sapply(1:nrow(all_mRNA_mRNA_300kb), function(i) as.numeric(mRNA_coordinates[as.character(all_mRNA_mRNA_300kb$mRNA2_Symbol[i])==as.character(mRNA_coordinates$mRNA),5]))
mRNA2_strand<-sapply(1:nrow(all_mRNA_mRNA_300kb), function(i) as.character(mRNA_coordinates[as.character(all_mRNA_mRNA_300kb$mRNA2_Symbol[i])==as.character(mRNA_coordinates$mRNA),6]))

mRNA2_fromallmRNAmRNA_300kb<-as.data.frame(cbind(all_mRNA_mRNA_300kb$mRNA2_Symbol, mRNA2_chr, mRNA2_start, mRNA2_end, mRNA2_strand), stringsAsFactors=FALSE)

# -----------------------------------------------------------------------------------------------------------------------------------------------
#This part here test whether the coordinates of the mRNA and mRNA2 are in comparison to each other in genomic space

transcriptional_classifier_mRNA<-function(mRNA2, mRNA){
  mRNA2<-mRNA2
  mRNA<-mRNA
  

  colnames(mRNA2)<-c("mRNA2", "mRNA2_chr", "mRNA2_start", "mRNA2_end", "mRNA2_strand")
  mRNA2$mRNA2_start<-as.numeric(mRNA2$mRNA2_start)
  mRNA2$mRNA2_end<-as.numeric(mRNA2$mRNA2_end)
  mRNA2$mRNA2_strand<-as.character(mRNA2$mRNA2_strand)
  
  colnames(mRNA)<-c("mRNA", "mRNA_chr", "mRNA_start", "mRNA_end", "mRNA_strand")
  mRNA$mRNA_start<-as.numeric(mRNA$mRNA_start)
  mRNA$mRNA_end<-as.numeric(mRNA$mRNA_end)
  mRNA$mRNA_strand<-as.character(mRNA$mRNA_strand)
  
  mRNA2[((mRNA2$mRNA2_start>mRNA$mRNA_start)&(mRNA2$mRNA2_end>mRNA$mRNA_end)&(mRNA2$mRNA2_start<=mRNA$mRNA_end)),6]<-as.character("antisense")
  mRNA2[((mRNA2$mRNA2_start<mRNA$mRNA_start)&(mRNA2$mRNA2_end<mRNA$mRNA_end)&(mRNA2$mRNA2_end>=mRNA$mRNA_start)),6]<-as.character("antisense")
  
  mRNA2[((mRNA2$mRNA2_start>mRNA$mRNA_start)&(mRNA2$mRNA2_end>mRNA$mRNA_end)&(mRNA2$mRNA2_start>mRNA$mRNA_end)),6]<-as.character("downstream")
  mRNA2[((mRNA2$mRNA2_start<mRNA$mRNA_start)&(mRNA2$mRNA2_end<mRNA$mRNA_end)&(mRNA2$mRNA2_end<mRNA$mRNA_start)),6]<-as.character("upstream")
  mRNA2[((mRNA2$mRNA2_start<=mRNA$mRNA_start)&(mRNA2$mRNA2_end>=mRNA$mRNA_end))|((mRNA2$mRNA2_start>=mRNA$mRNA_start)&(mRNA2$mRNA2_end<=mRNA$mRNA_end)),6]<-as.character("intersecting")
  mRNA2[((mRNA2$mRNA2_start==mRNA$mRNA_start)&(mRNA2$mRNA2_end==mRNA$mRNA_end)),6]<-as.character("same coordinates")
  
  mRNA2[(mRNA2$mRNA2_strand=="+")&(mRNA$mRNA_strand=="+")&(mRNA2$V6=="upstream"),7]<-as.character("forward codirectional")
  mRNA2[(mRNA2$mRNA2_strand=="-")&(mRNA$mRNA_strand=="-")&(mRNA2$V6=="upstream"),7]<-as.character("reverse codirectional")
  mRNA2[(mRNA2$mRNA2_strand=="+")&(mRNA$mRNA_strand=="-")&(mRNA2$V6=="upstream"),7]<-as.character("convergent")
  mRNA2[(mRNA2$mRNA2_strand=="-")&(mRNA$mRNA_strand=="+")&(mRNA2$V6=="upstream"),7]<-as.character("divergent")
  
  mRNA2[(mRNA2$mRNA2_strand=="+")&(mRNA$mRNA_strand=="+")&(mRNA2$V6=="downstream"),7]<-as.character("forward codirectional")
  mRNA2[(mRNA2$mRNA2_strand=="-")&(mRNA$mRNA_strand=="-")&(mRNA2$V6=="downstream"),7]<-as.character("reverse codirectional")
  mRNA2[(mRNA2$mRNA2_strand=="+")&(mRNA$mRNA_strand=="-")&(mRNA2$V6=="downstream"),7]<-as.character("divergent")
  mRNA2[(mRNA2$mRNA2_strand=="-")&(mRNA$mRNA_strand=="+")&(mRNA2$V6=="downstream"),7]<-as.character("convergent")
  
  mRNA2[(mRNA2$V6=="same coordinates"),7]<-as.character("same coordinates")
  mRNA2[(mRNA2$V6=="antisense"),7]<-as.character("antisense")
  mRNA2[(mRNA2$V6=="intersecting"),7]<-as.character("intersecting")
  
  return(mRNA2)
}

# -----------------------------------------------------------------------------------------------------------------------------------------------
# Now running the transcriptional classifier function
mRNAde_mRNAde_list<- lapply(seq_along(distance), function(i) transcriptional_classifier_mRNA(mRNA2_frommRNAdemRNAde_list[[i]], mRNA_frommRNAdemRNAde_list[[i]]))

all_mRNA_mRNA_50kb<- transcriptional_classifier_mRNA(mRNA2_fromallmRNAmRNA_50kb, mRNA_fromallmRNAmRNA_50kb)
all_mRNA_mRNA_150kb<- transcriptional_classifier_mRNA(mRNA2_fromallmRNAmRNA_150kb, mRNA_fromallmRNAmRNA_150kb)
all_mRNA_mRNA_300kb<- transcriptional_classifier_mRNA(mRNA2_fromallmRNAmRNA_300kb, mRNA_fromallmRNAmRNA_300kb)

# -----------------------------------------------------------------------------------------------------------------------------------------------
# Saving the mRNA-mRNA transcriptional orientation classification
lapply(seq_along(mRNAde_mRNAde_list),
       function(i)(write.csv(as.data.frame(mRNAde_mRNAde_list[[i]]),
                             file =paste0("mRNAde_mRNAde_transcriptional_classification_",distance[i],'.csv'))))

# Also saving the transcriptional orientation of all mRNA-mRNA pairs

write.csv(all_mRNA_mRNA_50kb, "all_mRNA_mRNA_transcriptional_classification_50kb.csv")
write.csv(all_mRNA_mRNA_150kb, "all_mRNA_mRNA_transcriptional_classification_150kb.csv")
write.csv(all_mRNA_mRNA_300kb, "all_mRNA_mRNA_transcriptional_classification_300kb.csv")


# -----------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------
# Tabulating the number of different neighboring pair transcriptional orientations for
# mRNA-lncRNA and mRNA-mRNA pairs

# classifier_tabulation function will could the number of different types of transcriptional orientations
# there are

classifier_tabulator<-function(file){
  file<-file
  
  antisense<-vector(length=length(file))
  forward_codirectional<-vector(length=length(file))
  reverse_codirectional<-vector(length=length(file))
  convergent<-vector(length=length(file))
  divergent<-vector(length=length(file))
  intersecting<-vector(length=length(file))
  same_coordinates<-vector(length=length(file))
  
  output<-data.frame(forward_codirectional, reverse_codirectional, convergent, divergent,
                     intersecting, same_coordinates, antisense)
  
  rownames(output)<-names(file)
  
  for (i in 1:length(file)){
    output[i,1]<-(sum(file[[i]]$V7=="forward codirectional")/nrow(file[[i]]))*100
    output[i,2]<-(sum(file[[i]]$V7=="reverse codirectional")/nrow(file[[i]]))*100
    output[i,3]<-(sum(file[[i]]$V7=="convergent")/nrow(file[[i]]))*100
    output[i,4]<-(sum(file[[i]]$V7=="divergent")/nrow(file[[i]]))*100
    output[i,5]<-(sum(file[[i]]$V7=="intersecting")/nrow(file[[i]]))*100
    output[i,6]<-(sum(file[[i]]$V7=="same coordinates")/nrow(file[[i]]))*100
    output[i,7]<-(sum(file[[i]]$V7=="antisense")/nrow(file[[i]]))*100
      }
  return(output)
}


# -----------------------------------------------------------------------------------------------------------------------------------------------
# For the purposes of tabulation, merging the all_lists with the de_lists
mRNAde_lncRNAde_list[[31]]<-all_mRNA_lncRNA_50kb
mRNAde_lncRNAde_list[[32]]<-all_mRNA_lncRNA_150kb
mRNAde_lncRNAde_list[[33]]<-all_mRNA_lncRNA_300kb

mRNAde_mRNAde_list[[31]]<-all_mRNA_mRNA_50kb
mRNAde_mRNAde_list[[32]]<-all_mRNA_mRNA_150kb
mRNAde_mRNAde_list[[33]]<-all_mRNA_mRNA_300kb

# Now running the classifier_tabulation function and saving the file

mRNAde_lncRNAde_classification_tabulation<- classifier_tabulator(mRNAde_lncRNAde_list)
# Save file

mRNAde_mRNAde_classification_tabulation<- classifier_tabulator(mRNAde_mRNAde_list)
# Save file


# -----------------------------------------------------------------------------------------------------------------------------------------------
# Graphing the proportion of different transcriptional orientations for mRNAde-lncRNAde
# vs mRNAde-mRNAde transcript pairs

# Taking the tabulation dataframes and reordering them
# Remove the "same coordinates" category as there are no transcripts pairs falling within it

mRNAde_lncRNAde_classification_tabulation<-mRNAde_lncRNAde_classification_tabulation[,c(1:5,7)]
colnames(mRNAde_lncRNAde_classification_tabulation)<-c("forward codirectional", "reverse codirectional", "convergent", "divergent", "intersecting", "antisense")


# Re-order into the following order:
# Divergent, forward codirectional, reverse codirectional, convergent, intersecting

mRNAde_lncRNAde_classification_tabulation<-mRNAde_lncRNAde_classification_tabulation[,c(4,6,1,2,3,5)]

# Now same thing for mRNAde-mRNAde pairs
mRNAde_mRNAde_classification_tabulation<-mRNAde_mRNAde_classification_tabulation[,c(1:5,7)]
colnames(mRNAde_mRNAde_classification_tabulation)<-c("forward codirectional", "reverse codirectional", "convergent", "divergent", "intersecting", "antisense")

mRNAde_mRNAde_classification_tabulation<-mRNAde_mRNAde_classification_tabulation[,c(4,6,1,2,3,5)]

#-------------------------------------------------------------------------------------------------
# Preparing to plot
# Transpose
mRNAde_lncRNAde_classification_tabulation<-t(mRNAde_lncRNAde_classification_tabulation)

mRNAde_mRNAde_classification_tabulation<-t(mRNAde_mRNAde_classification_tabulation)

# Now plot
pdf("mRNA_lncRNA_classification_tabulation.pdf", height = 5, width = 7, paper="special")
barplot(mRNAde_lncRNAde_classification_tabulation[,c(10,22,28)], horiz=T, col=c("darkorchid4", "darkorange2","deeppink","dodgerblue3","dark green","grey10") , xlab="group")
dev.off()

pdf("mRNA_mRNA_classification_tabulation.pdf", height = 5, width = 7, paper="special")
barplot(mRNAde_mRNAde_classification_tabulation[,c(10,22,28)], horiz=T, col=c("darkorchid4", "darkorange2", "deeppink","dodgerblue3","dark green","grey10") , xlab="group")
dev.off()

#-------------------------------------------------------------------------------------------------
# Performing statistical analysis
# -----------------------------------------------------------------------------------------------------------------------------------------------
# Making contingency tables for different distances particularly 50kb, 150kb, and 300kb
# Start with comparing mRNAde-lncRNAde pairs to random mRNAde-lncRNAde pairs
table_50kb<-rbind(mRNAde_lncRNAde_classification_tabulation[,10], mRNAde_lncRNAde_classification_tabulation[,31])
table_150kb<-rbind(mRNAde_lncRNAde_classification_tabulation[,22], mRNAde_lncRNAde_classification_tabulation[,32])
table_300kb<-rbind(mRNAde_lncRNAde_classification_tabulation[,28], mRNAde_lncRNAde_classification_tabulation[,33])

# Make a vector where to record pvalues
pvalue_lncRNA<-vector(length=3)

pvalue_lncRNA[1]<-chisq.test(table_50kb)$p.value
#p-value = 0.08459611

pvalue_lncRNA[2]<-chisq.test(table_150kb)$p.value
#p-value = 0.17424394

pvalue_lncRNA[3]<-chisq.test(table_300kb)$p.value
#p-value = 0.56175650

p.adjust(pvalue_lncRNA, method = "bonferroni")
# 0.2537883 0.5227318 1.0000000

# Next compare mRNAde-mRNAde pairs to random mRNAde-mRNAde pairs
table_50kb<-rbind(mRNAde_mRNAde_classification_tabulation[,10], mRNAde_mRNAde_classification_tabulation[,31])
table_150kb<-rbind(mRNAde_mRNAde_classification_tabulation[,22], mRNAde_mRNAde_classification_tabulation[,32])
table_300kb<-rbind(mRNAde_mRNAde_classification_tabulation[,28], mRNAde_mRNAde_classification_tabulation[,33])

# Make a vector where to record pvalues
pvalue_mRNA<-vector(length=3)

pvalue_mRNA[1]<-chisq.test(table_50kb)$p.value
#p-value = 0.00209573

pvalue_mRNA[2]<-chisq.test(table_150kb)$p.value
#p-value = 0.01970818

pvalue_mRNA[3]<-chisq.test(table_300kb)$p.value
#p-value = 0.26455424

p.adjust(pvalue_mRNA, method = "bonferroni")
# 0.006287191 0.059124548 0.793662706

# Lastly, compare mRNAde-lncRNAde pairs to mRNAde-mRNAde pairs
table_50kb<-rbind(mRNAde_lncRNAde_classification_tabulation[,10], mRNAde_mRNAde_classification_tabulation[,10])
table_150kb<-rbind(mRNAde_lncRNAde_classification_tabulation[,22], mRNAde_mRNAde_classification_tabulation[,22])
table_300kb<-rbind(mRNAde_lncRNAde_classification_tabulation[,28], mRNAde_mRNAde_classification_tabulation[,28])

# Make a vector where to record pvalues
pvalue_lncRNAvsmRNA<-vector(length=3)

pvalue_lncRNAvsmRNA[1]<-chisq.test(table_50kb)$p.value
#p-value = 1.982e-12

pvalue_lncRNAvsmRNA[2]<-chisq.test(table_150kb)$p.value
#p-value = 4.823e-07

pvalue_lncRNAvsmRNA[3]<-chisq.test(table_300kb)$p.value
#p-value = 0.001263

p.adjust(pvalue_lncRNAvsmRNA, method = "bonferroni")
# 5.947324e-12 1.446797e-06 3.788694e-03

